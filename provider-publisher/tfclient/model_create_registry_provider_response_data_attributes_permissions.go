/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// CreateRegistryProviderResponseDataAttributesPermissions struct for CreateRegistryProviderResponseDataAttributesPermissions
type CreateRegistryProviderResponseDataAttributesPermissions struct {
	CanDelete *bool `json:"can-delete,omitempty"`
}

// NewCreateRegistryProviderResponseDataAttributesPermissions instantiates a new CreateRegistryProviderResponseDataAttributesPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRegistryProviderResponseDataAttributesPermissions() *CreateRegistryProviderResponseDataAttributesPermissions {
	this := CreateRegistryProviderResponseDataAttributesPermissions{}
	return &this
}

// NewCreateRegistryProviderResponseDataAttributesPermissionsWithDefaults instantiates a new CreateRegistryProviderResponseDataAttributesPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRegistryProviderResponseDataAttributesPermissionsWithDefaults() *CreateRegistryProviderResponseDataAttributesPermissions {
	this := CreateRegistryProviderResponseDataAttributesPermissions{}
	return &this
}

// GetCanDelete returns the CanDelete field value if set, zero value otherwise.
func (o *CreateRegistryProviderResponseDataAttributesPermissions) GetCanDelete() bool {
	if o == nil || o.CanDelete == nil {
		var ret bool
		return ret
	}
	return *o.CanDelete
}

// GetCanDeleteOk returns a tuple with the CanDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRegistryProviderResponseDataAttributesPermissions) GetCanDeleteOk() (*bool, bool) {
	if o == nil || o.CanDelete == nil {
		return nil, false
	}
	return o.CanDelete, true
}

// HasCanDelete returns a boolean if a field has been set.
func (o *CreateRegistryProviderResponseDataAttributesPermissions) HasCanDelete() bool {
	if o != nil && o.CanDelete != nil {
		return true
	}

	return false
}

// SetCanDelete gets a reference to the given bool and assigns it to the CanDelete field.
func (o *CreateRegistryProviderResponseDataAttributesPermissions) SetCanDelete(v bool) {
	o.CanDelete = &v
}

func (o CreateRegistryProviderResponseDataAttributesPermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CanDelete != nil {
		toSerialize["can-delete"] = o.CanDelete
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRegistryProviderResponseDataAttributesPermissions struct {
	value *CreateRegistryProviderResponseDataAttributesPermissions
	isSet bool
}

func (v NullableCreateRegistryProviderResponseDataAttributesPermissions) Get() *CreateRegistryProviderResponseDataAttributesPermissions {
	return v.value
}

func (v *NullableCreateRegistryProviderResponseDataAttributesPermissions) Set(val *CreateRegistryProviderResponseDataAttributesPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRegistryProviderResponseDataAttributesPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRegistryProviderResponseDataAttributesPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRegistryProviderResponseDataAttributesPermissions(val *CreateRegistryProviderResponseDataAttributesPermissions) *NullableCreateRegistryProviderResponseDataAttributesPermissions {
	return &NullableCreateRegistryProviderResponseDataAttributesPermissions{value: val, isSet: true}
}

func (v NullableCreateRegistryProviderResponseDataAttributesPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRegistryProviderResponseDataAttributesPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
