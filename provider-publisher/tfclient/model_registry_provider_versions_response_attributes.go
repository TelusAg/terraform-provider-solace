/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// RegistryProviderVersionsResponseAttributes struct for RegistryProviderVersionsResponseAttributes
type RegistryProviderVersionsResponseAttributes struct {
	Version            *string                                                `json:"version,omitempty"`
	CreatedAt          *string                                                `json:"created-at,omitempty"`
	UpdatedAt          *string                                                `json:"updated-at,omitempty"`
	KeyId              *string                                                `json:"key-id,omitempty"`
	RegistryName       *string                                                `json:"registry-name,omitempty"`
	Permissions        *RegistryProviderVersionsResponseAttributesPermissions `json:"permissions,omitempty"`
	ShasumsUploaded    *bool                                                  `json:"shasums-uploaded,omitempty"`
	ShasumsSigUploaded *bool                                                  `json:"shasums-sig-uploaded,omitempty"`
}

// NewRegistryProviderVersionsResponseAttributes instantiates a new RegistryProviderVersionsResponseAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistryProviderVersionsResponseAttributes() *RegistryProviderVersionsResponseAttributes {
	this := RegistryProviderVersionsResponseAttributes{}
	return &this
}

// NewRegistryProviderVersionsResponseAttributesWithDefaults instantiates a new RegistryProviderVersionsResponseAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistryProviderVersionsResponseAttributesWithDefaults() *RegistryProviderVersionsResponseAttributes {
	this := RegistryProviderVersionsResponseAttributes{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *RegistryProviderVersionsResponseAttributes) SetVersion(v string) {
	o.Version = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RegistryProviderVersionsResponseAttributes) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *RegistryProviderVersionsResponseAttributes) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetKeyId() string {
	if o == nil || o.KeyId == nil {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetKeyIdOk() (*string, bool) {
	if o == nil || o.KeyId == nil {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasKeyId() bool {
	if o != nil && o.KeyId != nil {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *RegistryProviderVersionsResponseAttributes) SetKeyId(v string) {
	o.KeyId = &v
}

// GetRegistryName returns the RegistryName field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetRegistryName() string {
	if o == nil || o.RegistryName == nil {
		var ret string
		return ret
	}
	return *o.RegistryName
}

// GetRegistryNameOk returns a tuple with the RegistryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetRegistryNameOk() (*string, bool) {
	if o == nil || o.RegistryName == nil {
		return nil, false
	}
	return o.RegistryName, true
}

// HasRegistryName returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasRegistryName() bool {
	if o != nil && o.RegistryName != nil {
		return true
	}

	return false
}

// SetRegistryName gets a reference to the given string and assigns it to the RegistryName field.
func (o *RegistryProviderVersionsResponseAttributes) SetRegistryName(v string) {
	o.RegistryName = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetPermissions() RegistryProviderVersionsResponseAttributesPermissions {
	if o == nil || o.Permissions == nil {
		var ret RegistryProviderVersionsResponseAttributesPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetPermissionsOk() (*RegistryProviderVersionsResponseAttributesPermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given RegistryProviderVersionsResponseAttributesPermissions and assigns it to the Permissions field.
func (o *RegistryProviderVersionsResponseAttributes) SetPermissions(v RegistryProviderVersionsResponseAttributesPermissions) {
	o.Permissions = &v
}

// GetShasumsUploaded returns the ShasumsUploaded field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetShasumsUploaded() bool {
	if o == nil || o.ShasumsUploaded == nil {
		var ret bool
		return ret
	}
	return *o.ShasumsUploaded
}

// GetShasumsUploadedOk returns a tuple with the ShasumsUploaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetShasumsUploadedOk() (*bool, bool) {
	if o == nil || o.ShasumsUploaded == nil {
		return nil, false
	}
	return o.ShasumsUploaded, true
}

// HasShasumsUploaded returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasShasumsUploaded() bool {
	if o != nil && o.ShasumsUploaded != nil {
		return true
	}

	return false
}

// SetShasumsUploaded gets a reference to the given bool and assigns it to the ShasumsUploaded field.
func (o *RegistryProviderVersionsResponseAttributes) SetShasumsUploaded(v bool) {
	o.ShasumsUploaded = &v
}

// GetShasumsSigUploaded returns the ShasumsSigUploaded field value if set, zero value otherwise.
func (o *RegistryProviderVersionsResponseAttributes) GetShasumsSigUploaded() bool {
	if o == nil || o.ShasumsSigUploaded == nil {
		var ret bool
		return ret
	}
	return *o.ShasumsSigUploaded
}

// GetShasumsSigUploadedOk returns a tuple with the ShasumsSigUploaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryProviderVersionsResponseAttributes) GetShasumsSigUploadedOk() (*bool, bool) {
	if o == nil || o.ShasumsSigUploaded == nil {
		return nil, false
	}
	return o.ShasumsSigUploaded, true
}

// HasShasumsSigUploaded returns a boolean if a field has been set.
func (o *RegistryProviderVersionsResponseAttributes) HasShasumsSigUploaded() bool {
	if o != nil && o.ShasumsSigUploaded != nil {
		return true
	}

	return false
}

// SetShasumsSigUploaded gets a reference to the given bool and assigns it to the ShasumsSigUploaded field.
func (o *RegistryProviderVersionsResponseAttributes) SetShasumsSigUploaded(v bool) {
	o.ShasumsSigUploaded = &v
}

func (o RegistryProviderVersionsResponseAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.CreatedAt != nil {
		toSerialize["created-at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated-at"] = o.UpdatedAt
	}
	if o.KeyId != nil {
		toSerialize["key-id"] = o.KeyId
	}
	if o.RegistryName != nil {
		toSerialize["registry-name"] = o.RegistryName
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.ShasumsUploaded != nil {
		toSerialize["shasums-uploaded"] = o.ShasumsUploaded
	}
	if o.ShasumsSigUploaded != nil {
		toSerialize["shasums-sig-uploaded"] = o.ShasumsSigUploaded
	}
	return json.Marshal(toSerialize)
}

type NullableRegistryProviderVersionsResponseAttributes struct {
	value *RegistryProviderVersionsResponseAttributes
	isSet bool
}

func (v NullableRegistryProviderVersionsResponseAttributes) Get() *RegistryProviderVersionsResponseAttributes {
	return v.value
}

func (v *NullableRegistryProviderVersionsResponseAttributes) Set(val *RegistryProviderVersionsResponseAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistryProviderVersionsResponseAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistryProviderVersionsResponseAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistryProviderVersionsResponseAttributes(val *RegistryProviderVersionsResponseAttributes) *NullableRegistryProviderVersionsResponseAttributes {
	return &NullableRegistryProviderVersionsResponseAttributes{value: val, isSet: true}
}

func (v NullableRegistryProviderVersionsResponseAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistryProviderVersionsResponseAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
