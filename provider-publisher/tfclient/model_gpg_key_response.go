/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// GpgKeyResponse struct for GpgKeyResponse
type GpgKeyResponse struct {
	Data *GpgKeyResponseData `json:"data,omitempty"`
}

// NewGpgKeyResponse instantiates a new GpgKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpgKeyResponse() *GpgKeyResponse {
	this := GpgKeyResponse{}
	return &this
}

// NewGpgKeyResponseWithDefaults instantiates a new GpgKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpgKeyResponseWithDefaults() *GpgKeyResponse {
	this := GpgKeyResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GpgKeyResponse) GetData() GpgKeyResponseData {
	if o == nil || o.Data == nil {
		var ret GpgKeyResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpgKeyResponse) GetDataOk() (*GpgKeyResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GpgKeyResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given GpgKeyResponseData and assigns it to the Data field.
func (o *GpgKeyResponse) SetData(v GpgKeyResponseData) {
	o.Data = &v
}

func (o GpgKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGpgKeyResponse struct {
	value *GpgKeyResponse
	isSet bool
}

func (v NullableGpgKeyResponse) Get() *GpgKeyResponse {
	return v.value
}

func (v *NullableGpgKeyResponse) Set(val *GpgKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGpgKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGpgKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpgKeyResponse(val *GpgKeyResponse) *NullableGpgKeyResponse {
	return &NullableGpgKeyResponse{value: val, isSet: true}
}

func (v NullableGpgKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpgKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
