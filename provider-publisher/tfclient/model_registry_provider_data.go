/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// RegistryProviderData struct for RegistryProviderData
type RegistryProviderData struct {
	Type       string                         `json:"type"`
	Attributes RegistryProviderDataAttributes `json:"attributes"`
}

// NewRegistryProviderData instantiates a new RegistryProviderData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistryProviderData(type_ string, attributes RegistryProviderDataAttributes) *RegistryProviderData {
	this := RegistryProviderData{}
	this.Type = type_
	this.Attributes = attributes
	return &this
}

// NewRegistryProviderDataWithDefaults instantiates a new RegistryProviderData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistryProviderDataWithDefaults() *RegistryProviderData {
	this := RegistryProviderData{}
	return &this
}

// GetType returns the Type field value
func (o *RegistryProviderData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RegistryProviderData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RegistryProviderData) SetType(v string) {
	o.Type = v
}

// GetAttributes returns the Attributes field value
func (o *RegistryProviderData) GetAttributes() RegistryProviderDataAttributes {
	if o == nil {
		var ret RegistryProviderDataAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *RegistryProviderData) GetAttributesOk() (*RegistryProviderDataAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *RegistryProviderData) SetAttributes(v RegistryProviderDataAttributes) {
	o.Attributes = v
}

func (o RegistryProviderData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableRegistryProviderData struct {
	value *RegistryProviderData
	isSet bool
}

func (v NullableRegistryProviderData) Get() *RegistryProviderData {
	return v.value
}

func (v *NullableRegistryProviderData) Set(val *RegistryProviderData) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistryProviderData) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistryProviderData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistryProviderData(val *RegistryProviderData) *NullableRegistryProviderData {
	return &NullableRegistryProviderData{value: val, isSet: true}
}

func (v NullableRegistryProviderData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistryProviderData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
