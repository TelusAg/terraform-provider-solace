/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// CreateRegistryProviderVersion struct for CreateRegistryProviderVersion
type CreateRegistryProviderVersion struct {
	Data CreateRegistryProviderVersionData `json:"data"`
}

// NewCreateRegistryProviderVersion instantiates a new CreateRegistryProviderVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRegistryProviderVersion(data CreateRegistryProviderVersionData) *CreateRegistryProviderVersion {
	this := CreateRegistryProviderVersion{}
	this.Data = data
	return &this
}

// NewCreateRegistryProviderVersionWithDefaults instantiates a new CreateRegistryProviderVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRegistryProviderVersionWithDefaults() *CreateRegistryProviderVersion {
	this := CreateRegistryProviderVersion{}
	return &this
}

// GetData returns the Data field value
func (o *CreateRegistryProviderVersion) GetData() CreateRegistryProviderVersionData {
	if o == nil {
		var ret CreateRegistryProviderVersionData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateRegistryProviderVersion) GetDataOk() (*CreateRegistryProviderVersionData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CreateRegistryProviderVersion) SetData(v CreateRegistryProviderVersionData) {
	o.Data = v
}

func (o CreateRegistryProviderVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRegistryProviderVersion struct {
	value *CreateRegistryProviderVersion
	isSet bool
}

func (v NullableCreateRegistryProviderVersion) Get() *CreateRegistryProviderVersion {
	return v.value
}

func (v *NullableCreateRegistryProviderVersion) Set(val *CreateRegistryProviderVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRegistryProviderVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRegistryProviderVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRegistryProviderVersion(val *CreateRegistryProviderVersion) *NullableCreateRegistryProviderVersion {
	return &NullableCreateRegistryProviderVersion{value: val, isSet: true}
}

func (v NullableCreateRegistryProviderVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRegistryProviderVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
