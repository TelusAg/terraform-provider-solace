/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// RegistryProvider struct for RegistryProvider
type RegistryProvider struct {
	Data RegistryProviderData `json:"data"`
}

// NewRegistryProvider instantiates a new RegistryProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistryProvider(data RegistryProviderData) *RegistryProvider {
	this := RegistryProvider{}
	this.Data = data
	return &this
}

// NewRegistryProviderWithDefaults instantiates a new RegistryProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistryProviderWithDefaults() *RegistryProvider {
	this := RegistryProvider{}
	return &this
}

// GetData returns the Data field value
func (o *RegistryProvider) GetData() RegistryProviderData {
	if o == nil {
		var ret RegistryProviderData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *RegistryProvider) GetDataOk() (*RegistryProviderData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *RegistryProvider) SetData(v RegistryProviderData) {
	o.Data = v
}

func (o RegistryProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableRegistryProvider struct {
	value *RegistryProvider
	isSet bool
}

func (v NullableRegistryProvider) Get() *RegistryProvider {
	return v.value
}

func (v *NullableRegistryProvider) Set(val *RegistryProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistryProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistryProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistryProvider(val *RegistryProvider) *NullableRegistryProvider {
	return &NullableRegistryProvider{value: val, isSet: true}
}

func (v NullableRegistryProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistryProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
