/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// CreateRegistryProviderVersionDataAttributes struct for CreateRegistryProviderVersionDataAttributes
type CreateRegistryProviderVersionDataAttributes struct {
	Version   string   `json:"version"`
	KeyId     string   `json:"key-id"`
	Protocols []string `json:"protocols"`
}

// NewCreateRegistryProviderVersionDataAttributes instantiates a new CreateRegistryProviderVersionDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRegistryProviderVersionDataAttributes(version string, keyId string, protocols []string) *CreateRegistryProviderVersionDataAttributes {
	this := CreateRegistryProviderVersionDataAttributes{}
	this.Version = version
	this.KeyId = keyId
	this.Protocols = protocols
	return &this
}

// NewCreateRegistryProviderVersionDataAttributesWithDefaults instantiates a new CreateRegistryProviderVersionDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRegistryProviderVersionDataAttributesWithDefaults() *CreateRegistryProviderVersionDataAttributes {
	this := CreateRegistryProviderVersionDataAttributes{}
	return &this
}

// GetVersion returns the Version field value
func (o *CreateRegistryProviderVersionDataAttributes) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CreateRegistryProviderVersionDataAttributes) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CreateRegistryProviderVersionDataAttributes) SetVersion(v string) {
	o.Version = v
}

// GetKeyId returns the KeyId field value
func (o *CreateRegistryProviderVersionDataAttributes) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *CreateRegistryProviderVersionDataAttributes) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *CreateRegistryProviderVersionDataAttributes) SetKeyId(v string) {
	o.KeyId = v
}

// GetProtocols returns the Protocols field value
func (o *CreateRegistryProviderVersionDataAttributes) GetProtocols() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value
// and a boolean to check if the value has been set.
func (o *CreateRegistryProviderVersionDataAttributes) GetProtocolsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocols, true
}

// SetProtocols sets field value
func (o *CreateRegistryProviderVersionDataAttributes) SetProtocols(v []string) {
	o.Protocols = v
}

func (o CreateRegistryProviderVersionDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["key-id"] = o.KeyId
	}
	if true {
		toSerialize["protocols"] = o.Protocols
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRegistryProviderVersionDataAttributes struct {
	value *CreateRegistryProviderVersionDataAttributes
	isSet bool
}

func (v NullableCreateRegistryProviderVersionDataAttributes) Get() *CreateRegistryProviderVersionDataAttributes {
	return v.value
}

func (v *NullableCreateRegistryProviderVersionDataAttributes) Set(val *CreateRegistryProviderVersionDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRegistryProviderVersionDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRegistryProviderVersionDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRegistryProviderVersionDataAttributes(val *CreateRegistryProviderVersionDataAttributes) *NullableCreateRegistryProviderVersionDataAttributes {
	return &NullableCreateRegistryProviderVersionDataAttributes{value: val, isSet: true}
}

func (v NullableCreateRegistryProviderVersionDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRegistryProviderVersionDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
