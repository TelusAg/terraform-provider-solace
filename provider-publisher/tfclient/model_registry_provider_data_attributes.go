/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// RegistryProviderDataAttributes struct for RegistryProviderDataAttributes
type RegistryProviderDataAttributes struct {
	Name         string `json:"name"`
	Namespace    string `json:"namespace"`
	RegistryName string `json:"registry-name"`
}

// NewRegistryProviderDataAttributes instantiates a new RegistryProviderDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistryProviderDataAttributes(name string, namespace string, registryName string) *RegistryProviderDataAttributes {
	this := RegistryProviderDataAttributes{}
	this.Name = name
	this.Namespace = namespace
	this.RegistryName = registryName
	return &this
}

// NewRegistryProviderDataAttributesWithDefaults instantiates a new RegistryProviderDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistryProviderDataAttributesWithDefaults() *RegistryProviderDataAttributes {
	this := RegistryProviderDataAttributes{}
	return &this
}

// GetName returns the Name field value
func (o *RegistryProviderDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RegistryProviderDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RegistryProviderDataAttributes) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
func (o *RegistryProviderDataAttributes) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *RegistryProviderDataAttributes) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *RegistryProviderDataAttributes) SetNamespace(v string) {
	o.Namespace = v
}

// GetRegistryName returns the RegistryName field value
func (o *RegistryProviderDataAttributes) GetRegistryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegistryName
}

// GetRegistryNameOk returns a tuple with the RegistryName field value
// and a boolean to check if the value has been set.
func (o *RegistryProviderDataAttributes) GetRegistryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistryName, true
}

// SetRegistryName sets field value
func (o *RegistryProviderDataAttributes) SetRegistryName(v string) {
	o.RegistryName = v
}

func (o RegistryProviderDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["namespace"] = o.Namespace
	}
	if true {
		toSerialize["registry-name"] = o.RegistryName
	}
	return json.Marshal(toSerialize)
}

type NullableRegistryProviderDataAttributes struct {
	value *RegistryProviderDataAttributes
	isSet bool
}

func (v NullableRegistryProviderDataAttributes) Get() *RegistryProviderDataAttributes {
	return v.value
}

func (v *NullableRegistryProviderDataAttributes) Set(val *RegistryProviderDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistryProviderDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistryProviderDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistryProviderDataAttributes(val *RegistryProviderDataAttributes) *NullableRegistryProviderDataAttributes {
	return &NullableRegistryProviderDataAttributes{value: val, isSet: true}
}

func (v NullableRegistryProviderDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistryProviderDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
