/*
Terraform Private Registry

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tfclient

import (
	"encoding/json"
)

// CreateProviderPlatform struct for CreateProviderPlatform
type CreateProviderPlatform struct {
	Data *CreateProviderPlatformData `json:"data,omitempty"`
}

// NewCreateProviderPlatform instantiates a new CreateProviderPlatform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProviderPlatform() *CreateProviderPlatform {
	this := CreateProviderPlatform{}
	return &this
}

// NewCreateProviderPlatformWithDefaults instantiates a new CreateProviderPlatform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProviderPlatformWithDefaults() *CreateProviderPlatform {
	this := CreateProviderPlatform{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CreateProviderPlatform) GetData() CreateProviderPlatformData {
	if o == nil || o.Data == nil {
		var ret CreateProviderPlatformData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProviderPlatform) GetDataOk() (*CreateProviderPlatformData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CreateProviderPlatform) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given CreateProviderPlatformData and assigns it to the Data field.
func (o *CreateProviderPlatform) SetData(v CreateProviderPlatformData) {
	o.Data = &v
}

func (o CreateProviderPlatform) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableCreateProviderPlatform struct {
	value *CreateProviderPlatform
	isSet bool
}

func (v NullableCreateProviderPlatform) Get() *CreateProviderPlatform {
	return v.value
}

func (v *NullableCreateProviderPlatform) Set(val *CreateProviderPlatform) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProviderPlatform) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProviderPlatform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProviderPlatform(val *CreateProviderPlatform) *NullableCreateProviderPlatform {
	return &NullableCreateProviderPlatform{value: val, isSet: true}
}

func (v NullableCreateProviderPlatform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProviderPlatform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
